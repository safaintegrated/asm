using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data;
using System.Data.SqlClient;
using DevExpress.Web.ASPxGridView;
using DevExpress.Web.ASPxEditors;
using Core.PengurusanSistem;
using System.Configuration;
using System.Web.Security;

namespace AssetAndStoreManagementSystem.PengurusanSistem.PegawaiAset
{
    public partial class PegawaiAset_Controller : System.Web.UI.UserControl
    {
        protected void Page_Load(object sender, EventArgs e)
        {
            if (!Page.IsPostBack)
                Page.ClientScript.RegisterStartupScript(this.GetType(), "OnLoad", "OnPageLoad();", true);
        }

        protected void cbp_PegawaiAsetInformation_Callback(object sender, DevExpress.Web.ASPxClasses.CallbackEventArgsBase e)
        {
            DataTable Dt = new DataTable();

            try
            {
                string ErrMsg = PegawaiAsetMethods.GetPegawaiAsetInformation(ref Dt, UserSystemId.Text);

                if (ErrMsg == string.Empty)
                {
                    if (Dt.Rows[0]["StartDate"].ToString() != "")
                        StartDate.Date = Convert.ToDateTime(Dt.Rows[0]["StartDate"]);
                    else
                        StartDate.Value = null;

                    if (Dt.Rows[0]["EndDate"].ToString() != "")
                        EndDate.Date = Convert.ToDateTime(Dt.Rows[0]["EndDate"]);
                    else
                        EndDate.Value = null;

                    if (Dt.Rows[0]["ActiveStatus"].ToString() != "")
                        if (Dt.Rows[0]["ActiveStatus"].ToString() == "Aktif")
                            ActiveStatus.Value = true;
                        else
                            ActiveStatus.Value = false;

                    else
                        ActiveStatus.Value = null;

                    cbp_PegawaiAsetInformation.JSProperties["cpErrMsg"] = string.Empty;
                }
                else
                {
                    string errMsg = ConfigurationManager.AppSettings["ErrorMessageStaringSentenceDBError"].ToString();
                    errMsg = errMsg.Replace("BR", "<br><br>");
                    cbp_PegawaiAsetInformation.JSProperties["cpErrMsg"] = errMsg + " " + ErrMsg; 
                }
            }
            catch (Exception err)
            {
                string errMsg = ConfigurationManager.AppSettings["ErrorMessageStaringSentenceCaughtByExceptions"].ToString();
                errMsg = errMsg.Replace("BR", "<br><br>");
                cbp_PegawaiAsetInformation.JSProperties["cpErrMsg"] = errMsg + " " + err; 
            }
            finally
            { Dt.Dispose(); }
        }

        protected void cbp_Save_Callback(object sender, DevExpress.Web.ASPxClasses.CallbackEventArgsBase e)
        {
            FormsIdentity id = (FormsIdentity)HttpContext.Current.User.Identity;
            FormsAuthenticationTicket ticket = id.Ticket;

            if (!ticket.Expired)
            {
                try
                {
                    string ErrMsg = PegawaiAsetMethods.SP_Update_PegawaiAset(UserSystemId.Text, StartDate.Date, EndDate.Date, Convert.ToBoolean(ActiveStatus.Value), ticket.Name);

                    if (ErrMsg == string.Empty)
                    { cbp_Save.JSProperties["cpErrMsg"] = string.Empty; }
                    else
                    {
                        string errMsg = ConfigurationManager.AppSettings["ErrorMessageStaringSentenceDBError"].ToString();
                        errMsg = errMsg.Replace("BR", "<br><br>");
                        cbp_Save.JSProperties["cpErrMsg"] = errMsg + " " + ErrMsg;
                    }
                }
                catch (Exception err)
                {
                    string errMsg = ConfigurationManager.AppSettings["ErrorMessageStaringSentenceCaughtByExceptions"].ToString();
                    errMsg = errMsg.Replace("BR", "<br><br>");
                    cbp_Save.JSProperties["cpErrMsg"] = errMsg + " " + err; 
                }
            }
            else
            { cbp_Save.JSProperties["cpErrMsg"] = "Session Expired"; }

        }
    }
}